from aiogram.types import Message, CallbackQuery

from core.config import STATS, DEUNKNOWN_COST
from core.data.postgres import PgSql
from core.utils.keyboards import kb_de_unknowns


async def my_stats(message: Message, db: PgSql):
    r = await db.statistics(message.chat.id)
    received_mes, sent, referals = r[0][0]
    await message.answer(STATS.format(received_mes, referals, sent))


async def ref_rewards(message: Message, db: PgSql):
    info = await db.freebies(message.chat.id)
    unused_refs, de_unknowns = info[0][0]

    await message.answer(
        "–¢–≤–æ–∏ <i><b>–†–µ—Ñ–µ—Ä–∞–ª—ã</b></i>üë§ –∏ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ <i><b>–î–µ–∞–Ω–æ–Ω—ã</b></i>ü´£\n\n"
             f"–ó–∞ –∫–∞–∂–¥—ã—Ö <i><b>{DEUNKNOWN_COST}-—Ö</b></i> –†–µ—Ñ–µ—Ä–∞–ª–æ–≤ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å <b><i>–î–µ–∞–Ω–æ–Ω</i></b>",
        reply_markup=kb_de_unknowns(unused_refs, de_unknowns))


async def exchange_refs(call: CallbackQuery, db: PgSql):
    current_ref_rewards = call.data.split('_')[-1]

    reply = '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –∫ –æ–±–º–µ–Ω—Éüòû'
    outcome, count_deunknowns = await db.ref_rewards_deunknowns_Transaction(call.message.chat.id, current_ref_rewards)

    if outcome:
        reply = f'–û–±–º–µ–Ω–µ–Ω–æ –Ω–∞ +{count_deunknowns} –î–µ–∞–Ω–æ–Ω–æ–≤!'
    await call.message.answer(reply)
