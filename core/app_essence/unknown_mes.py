from aiogram.fsm.context import FSMContext
from aiogram.types import Message, ReplyKeyboardRemove, InputMediaPhoto, InputMediaVideo

from core.data.postgres import PgSql
from core.utils.media_builder import media_assembler
from core.utils.state_machine import SaveSteps
from core.utils.keyboards import keyboard_get_confirm, keyboard_de_unknown_sender, cancel_kb_txt, cancel_kb_media
from core.config import LINK, ADMIN_ID, bot




async def anonim_mes_Command(message: Message, state: FSMContext):
    await message.answer('–í–≤–µ–¥–∏—Ç–µ —Ä–µ—Ñ–µ—Ä–∞–ª–∫—É –ø–æ–ª—É—á–∞—Ç–µ–ª—è –í–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è')
    await state.set_state(SaveSteps.COMMAND_ANONIM_MESSAGE)



async def command_anonim_message(message: Message, state: FSMContext, db: PgSql):
    """–ü–µ—Ä–µ—Ö–æ–¥ –ø—Ä–∏ –∫–æ–º–∞–Ω–¥–µ 'anonim_message' """
    global text, kb
    link_mes = message.text
    refer = ''
    for i in range(len(link_mes)):
        if link_mes[i].isdigit():
            refer += link_mes[i]
    try:
        ref = int(refer)
        await state.update_data(ref=ref)
    except ValueError:
        text, kb = '–¢–∞–∫–æ–π —Å—Å—ã–ª–∫–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç', ReplyKeyboardRemove()
        await state.clear()
    else:
        hozain = await db.adresat_id(ref)

        if hozain:
            await state.set_state(SaveSteps.GET_UNK_MESSAGE)
            await state.update_data(hozain=hozain[0]['f_name'])
            text, kb = f'‚úçÔ∏è–ù–∞–ø–∏—à–∏—Ç–µ –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {hozain[0]["f_name"]}', cancel_kb_txt()
    await message.answer(text, reply_markup=kb)


async def anonim_mes_start(message: Message, state: FSMContext, db: PgSql):
    """–ï—Å–ª–∏ –Æ–∑–µ—Ä –∑–∞—Ö–æ–¥–∏—Ç –≤–ø–µ—Ä–≤—ã–µ —á–µ—Ä–µ–∑ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É"""
    ref = (await state.get_data()).get('ref')
    hozain = await db.adresat_id(ref)

    if hozain:
        await state.set_state(SaveSteps.GET_UNK_MESSAGE)
        await state.update_data(hozain=hozain[0]['f_name'])
        text_, kb_ = f'‚úçÔ∏è–ù–∞–ø–∏—à–∏—Ç–µ –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {hozain[0]["f_name"]}', cancel_kb_txt()
    else:
        text_, kb_ = '–¢–∞–∫–æ–π —Å—Å—ã–ª–∫–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç', ReplyKeyboardRemove()
        await state.clear()

    await message.answer(text_, reply_markup=kb_)


async def get_message_2(message: Message, state: FSMContext):
    text_ = 'üì∑–ú–æ–∂–µ—à—å –ø—Ä–∏—Å–ª–∞—Ç—å –¥–æ 10 —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ'
    kb_ = cancel_kb_media()
    _state = None
    if message.text == '–û—Ç–º–µ–Ω–∞‚ùå':
        text_, kb_ = '–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ', ReplyKeyboardRemove()
        await state.clear()
    elif message.text == "–ë–µ–∑ —Ç–µ–∫—Å—Ç–∞‚úèÔ∏è":
        _state = SaveSteps.MEDIA_HANDLER
        await state.update_data(media=[], seti=set())
    else:
        await state.update_data(unk_mes=message.text, media=[], seti=set())
        _state = SaveSteps.MEDIA_HANDLER

    await message.answer(text_, reply_markup=kb_)
    await state.set_state(state=_state)


async def get_alias(message: Message, state: FSMContext):
    """–ü–æ–ª—É—á–∞–µ–º –ü—Å–µ–≤–¥–æ–Ω–∏–º –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è"""
    context_data = await state.get_data()
    text_unk = context_data.get('unk_mes')
    medias = context_data.get('media')
    len_medias = context_data.get('len_medias')
    if not text_unk and not len_medias:
        await message.answer('–ù–µ–ª—å–∑—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ —Ñ–æ—Ç–æ –∏ —Ç–µ–∫—Å—Ç–∞!', reply_markup=ReplyKeyboardRemove())
        await state.clear()
        return


    alias = '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π' if message.text == '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ –ø—Å–µ–≤–¥–æ–Ω–∏–º–∞üò∂‚Äçüå´Ô∏è' else message.text
    await state.update_data(alias=alias)

    hozain = context_data.get('hozain')
    text_ = '–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: \n\n{}\n\n–û—Ç –∫–æ–≥–æ: {}\n–ö–æ–º—É: {}'.format(text_unk or ' ', alias, hozain)
    text_add = '\n\n–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É?'

    await state.update_data(text_mes=text_)


    if medias:
        media_group = media_assembler(medias, text_)
        await message.answer_media_group(media_group.build())
    else:
        await message.answer(text_)

    await state.update_data(mes_id=message.message_id + 1)
    await message.answer(text_add, reply_markup=keyboard_get_confirm())
    await state.set_state(SaveSteps.GET_CONFIRM)


async def get_confirm(message: Message, state: FSMContext, db: PgSql):
    if message.text == '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å‚úÖ':
        context_data = await state.get_data()
        text_ = context_data.get('unk_mes') or ' '
        medias = context_data.get('media')
        len_medias = context_data.get('len_medias')
        alias = context_data.get('alias')
        hozain = context_data.get('ref')

        mes_for_hozain = f"–í–∞–º –æ—Ç ‚ú® {alias} ‚ú®\n\n{text_}\n\n#–ø–æ–ª—É—á–µ–Ω–Ω—ã–µ"
        try:
            if len_medias:
                media_group = media_assembler(medias, mes_for_hozain)
                await bot.send_media_group(hozain, media_group.build())
                await message.answer('–£–∑–Ω–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—èüëá',
                                     reply_markup=keyboard_de_unknown_sender(message.chat.id))
            else:
                await bot.send_message(hozain, mes_for_hozain, reply_markup=keyboard_de_unknown_sender(message.chat.id))
            await db.sent_receive_Transaction(message.chat.id, hozain)
            await message.answer('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!', reply_markup=ReplyKeyboardRemove())

        except Exception as e:
            await bot.send_message(ADMIN_ID, f'<b>{message.chat.id} -> {hozain}</b>\n\n{e}')
            await message.answer('–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å. –°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ, –ü–æ–ª—É—á–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞üò¢')
        else:
            text_ = context_data.get('text_mes') + '\n#–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ'

            mes_id = context_data.get('mes_id')

            if len_medias:
                media = InputMediaPhoto(media=medias[0][0], caption=text_)
                if medias[0][1]:
                    media = InputMediaVideo(media=medias[0][0], caption=text_)
                await bot.edit_message_media(chat_id=message.chat.id, message_id=mes_id, media=media)
            else:
                await bot.edit_message_text(chat_id=message.chat.id, message_id=mes_id, text=text_)


        await message.answer('–ê –ø–æ–∫–∞ –º–æ–∂–µ—Ç–µ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å —Å–≤–æ—é —Å—Å—ã–ª–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—èüòâ\n'
                             + LINK.format(message.chat.id), reply_markup=ReplyKeyboardRemove())
        await state.clear()

    elif message.text == '–ò–∑–º–µ–Ω–∏—Ç—å‚úèÔ∏è':

        await anonim_mes_start(message, state, db)

    elif message.text == '–û—Ç–º–µ–Ω–∞‚ùå':
        await message.answer('–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ', reply_markup=ReplyKeyboardRemove(remove_keyboard=True))
        await state.clear()

    else:
        await message.answer('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞! –í–≤–æ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—ã —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã\n\n–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æüö´', reply_markup=ReplyKeyboardRemove(remove_keyboard=True))
